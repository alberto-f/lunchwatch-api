definitions:
  Restaurant:
    title: Restaurant
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific restaurant
      name:
        type: string
        description: Name of the restaurant
      chain:
        type: string
        description: Chain the restaurant is part of
      url:
        type: string
        description: URL of the restaurants homepage
      createdAt:
        type: string
        format: date-time
        description: Restaurant creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Restaurant update datetime
  NewRestaurant:
    title: NewRestaurant
    type: object
    properties:
      name:
        type: string
        description: Name of the restaurant
      chain:
        type: string
        description: Chain the restaurant is part of
      url:
        type: string
        description: URL of the restaurants homepage
  Error:
    title: Error
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  ServerError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ServerError
  NotFoundError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: NotFoundError
  ValidationError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ValidationError
      - properties:
          details:
            type: array
            items:
              title: FieldError
              type: object
              properties:
                message:
                  type: string
                param:
                  type: string

/restaurants:
  get:
    summary: List all restaurants
    description: Returns restaurants
    produces:
      - application/json
    tags:
      - Restaurants
    responses:
      200:
        description: An array of restaurants
        schema:
          title: Restaurants
          type: array
          items:
            $ref: '#/definitions/Restaurant'
  post:
    summary: Create a new restaurant
    description: Create a restaurant
    produces:
      - application/json
    tags:
      - Restaurants
    parameters:
      - name: RestaurantParams
        description: POST params for a restaurant
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewRestaurant'
    responses:
      201:
        description: Newly created restaurant object
        schema:
          title: Restaurant
          type: object
          $ref: '#/definitions/Restaurant'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

/restaurants/{id}:
  get:
    summary: Get a restaurant
    description: Get restaurant information
    produces:
      - application/json
    tags:
      - Restaurants
    parameters:
      - name: id
        description: Unique identifier of the restaurant
        in: path
        required: true
        type: integer
    responses:
      200:
        description: Restaurant object
        schema:
          title: Restaurant
          type: object
          $ref: '#/definitions/Restaurant'
      404:
        description: Restaurant not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  put:
    summary: Update a restaurant
    description: Update a restaurant
    produces:
      - application/json
    tags:
      - Restaurants
    parameters:
      - name: id
        description: Unique identifier of the restaurant
        in: path
        required: true
        type: integer
      - name: RestaurantParams
        description: PUT params for a restaurant
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewRestaurant'
    responses:
      200:
        description: Updated restaurant object
        schema:
          title: Restaurant
          type: object
          $ref: '#/definitions/Restaurant'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Restaurant not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  delete:
    summary: Delete a restaurant
    description: Delete a restaurant
    produces:
      - application/json
    tags:
      - Restaurants
    parameters:
      - name: id
        description: Unique identifier of the restaurant
        in: path
        required: true
        type: integer
    responses:
      204:
        description: Restaurant deleted (no-content)
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Restaurant not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'
